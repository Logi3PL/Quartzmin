<div id="bulkCopyJobFormContainerWizard">
    <h3>Bulk Copy</h3>
    <section>
        <div>
            <table>
                <tr>
                    <td style="width:100%">
                        <label for="sourceconnectionstring">Source Connection String</label>
                        <input type="text" id="sourceconnectionstring" />
                    </td>
                    <td><input type="button" style="color:white;background-color:blue;height:45px" id="loadTables" value="Load Tables" onclick="loadTableDatas()" /></td>
                </tr>
            </table>
            
            <span></span>
        </div>
        <div>
            <label for="destinationconnectionstring">Destination Connection String</label>
            <input type="text" id="destinationconnectionstring" />
            <span></span>
        </div>
        <div>
            <div id="jsGrid"></div>
            <table id="grid"></table>
        </div>
    </section>
</div>

<script type="text/javascript">
    var changedItems = [];

    $("#bulkCopyJobFormContainerWizard").steps({
        headerTag: "h3",
        bodyTag: "section",
        transitionEffect: "slideLeft",
        autoFocus: true,
        enableFinishButton: false,
        titleTemplate: '#title#',
        onInit: function (event, current) {
            $('.actions > ul > li:first-child').attr('style', 'display:none');
        }
    });

    var tableActions = [
        { Action: "", Id: -1 },
        { Action: "TRUNCATEADD", Id: 1 },
        { Action: "ADD", Id: 2 }
    ];

    function loadTableDatas() {

        var url = "BulkCopyApi/LoadTables?conString=" + $("#sourceconnectionstring").val();
        $.getJSON(url, function (tableJson) {
            var tables = JSON.parse(tableJson);

            if (changedItems != null && changedItems != undefined) {
                debugger;

                changedItems.forEach(function(item) {
                    var rowItem = tables.find(x => x.Name === item.Name);
                    if (rowItem != null && rowItem != undefined) {

                        rowItem.Actions = item.Action;
                        rowItem.Where = item.Where;
                    }
                });

            }

            debugger;
            

            $("#jsGrid").jsGrid({
                width: "100%",
                height: "400px",

                inserting: false,
                editing: true,
                sorting: true,
                paging: false,

                data: tables,
                onItemUpdating: function (args) {
                    debugger;

                    var changedItem = changedItems.find(x => x.Name === args.item.Name);

                    if (changedItem != null && changedItem !=undefined) {

                        if (args.item.Actions == undefined || args.item.Actions == "-1" || args.item.Actions == null) {

                            changedItems.splice( changedItems.indexOf(changedItem), 1 );

                        } else {
                            changedItem.Action = args.item.Actions;
                            changedItem.Where = args.item.Where;
                        }

                    } else {
                        changedItems.push({ Name: args.item.Name, Action:args.item.Actions,Where:args.item.Where});
                    }

                },
                fields: [
                    { name: "Name", type: "text", width: 150,editing: false },
                    { name: "Actions", type: "select", items: tableActions, valueField: "Id", textField: "Action" },
                    { name: "Where", type: "text", width: 150,editing: true},
                    { name: "-", width: 150,editing: false,title:'<=>' },
                    { type: "control", editButton: true,deleteButton: false}
                ],
                //rowRenderer: function(item) {
                // var $row = $("<tr>");

                //      var $columnGrid = $("<div>").addClass("detail-grid").hide();

                //      $columnGrid.jsGrid({
                    //       width: 200,
                //          height: "auto",
                //            editing: true,
                //            data: item.Columns,
                //          fields: [
                //              { name: "Selected", type: "checkbox", title: "Selected", sorting: false },
                //              { name: "Name", width: 200 },
                //              { name: "Type", width: 200 },
                //              { name: "IsNullable", width: 100 },
                //              { type: "control", editButton: true, deleteButton: false }
                //        ]
                //      });

                //      var $colItem = $("<span>").text(item.Name)
                 			    //	        .prop("style", "color:blue")
                 			    //	        .dblclick(function() {
                //        	        $columnGrid.toggle();
                //            }).append($columnGrid);

                //    $row.append($("<td class='jsgrid-cell' style='width: 100px;'>").append($colItem));
                //    $row.append($("<td class='jsgrid-cell' style='width: 100px;'>").append($("<span>").text(item.Actions)));
                //    $row.append($("<td class='jsgrid-cell' style='width: 100px;'>").append($("<span>").text("-")));

                //    return $row;
                //}
    //           editRowRenderer: function(item, itemIndex) {
    //               var grid = this;
    //               var $nameEditor = $("<input>").attr("type", "text").attr("name", "Name").val(item.Name);

    //               var $updateButton = $("<input>").attr("type", "button").addClass("jsgrid-button jsgrid-update-button");
    //               var $cancelButton = $("<input>").attr("type", "button").addClass("jsgrid-button jsgrid-cancel-button");

    //$updateButton.on("click", function() {
    //       	        grid.updateItem(item, { Name: $nameEditor.val() });
    //               });

    //$cancelButton.on("click", function() {
    //       	        grid.cancelEdit();
    //               });

    //               return $("<tr>")
    //                 .append($("<td>").append($nameEditor))
    //                 .append($updateButton)
    //                 .append($cancelButton);
    //           }
            });

        });

    }

    function SetDataForBulkCopy(model) {
        debugger;
        $("#sourceconnectionstring").val(model.SourceConnectionString);
        $("#destinationconnectionstring").val(model.DestinationConnectionString);

        if (model != null && model != undefined && (model.SourceConnectionString != null && model.SourceConnectionString != undefined)) {

            changedItems = model.ChangedItems;
            loadTableDatas();
        }
    }

    function GetDataForBulkCopy() {
        debugger;

        var sourceConnectionString = $("#sourceconnectionstring").val();
        var destinationConnectionString = $("#destinationconnectionstring").val();

        return {
            SourceConnectionString: sourceConnectionString, DestinationConnectionString: destinationConnectionString, ChangedItems : changedItems
        };
    }
</script>
<script type="text/javascript" src="Content/Scripts/jsgrid/jsgrid.min.js"></script>
<link type="text/css" rel="stylesheet" href="Content/Scripts/jsgrid/jsgrid.min.css" />
<link type="text/css" rel="stylesheet" href="Content/Scripts/jsgrid/jsgrid-theme.min.css" />
<script src="Content/Scripts/jquery.steps.min.js"></script>
<link rel="stylesheet" href="Content/jquery.steps.css" type="text/css" />


